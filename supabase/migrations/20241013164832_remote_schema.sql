

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";






CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";






CREATE TYPE "public"."daysofweek" AS ENUM (
    'Monday',
    'Tuesday',
    'Wednesday',
    'Thursday',
    'Friday',
    'Saturday',
    'Sunday'
);


ALTER TYPE "public"."daysofweek" OWNER TO "postgres";


CREATE TYPE "public"."reaction" AS ENUM (
    'like',
    'love',
    'celebrate',
    'insightful',
    'curious'
);


ALTER TYPE "public"."reaction" OWNER TO "postgres";


CREATE TYPE "public"."student_type" AS ENUM (
    'regular',
    'irregular'
);


ALTER TYPE "public"."student_type" OWNER TO "postgres";


CREATE OR REPLACE FUNCTION "public"."get_group_metadata"() RETURNS TABLE("group_id" integer, "group_name" "text", "group_subjects" "text"[], "year_level" "text", "block" "text")
    LANGUAGE "sql"
    AS $$
SELECT 
    g.id AS group_id,
    g.name AS group_name,
    ARRAY(
        SELECT DISTINCT sub.title
        FROM group_members gm
        JOIN students_class sc ON sc.student_id = gm.student_id
        JOIN classes c ON c.id = sc.class_id
        JOIN subjects sub ON sub.id = c.subject_id
        WHERE gm.group_id = g.id
    ) AS group_subjects,
    MAX(s.year_level) AS year_level,
    MAX(s.block) AS block
FROM groups g
JOIN group_members gm ON g.id = gm.group_id
JOIN students s ON s.id = gm.student_id
GROUP BY g.id;
$$;


ALTER FUNCTION "public"."get_group_metadata"() OWNER TO "postgres";


CREATE OR REPLACE FUNCTION "public"."get_student_profile"("user_id" integer) RETURNS TABLE("id" integer, "year_level" "text", "block" "text", "subjects" "text"[])
    LANGUAGE "sql"
    AS $$
SELECT 
    s.id,
    s.year_level,
    s.block,
    ARRAY(
        SELECT sub.title
        FROM students_class sc
        JOIN classes c ON c.id = sc.class_id
        JOIN subjects sub ON sub.id = c.subject_id
        WHERE sc.student_id = s.id
    ) AS subjects
FROM students s
WHERE s.id = user_id;
$$;


ALTER FUNCTION "public"."get_student_profile"("user_id" integer) OWNER TO "postgres";


CREATE OR REPLACE FUNCTION "public"."handle_new_user"() RETURNS "trigger"
    LANGUAGE "plpgsql" SECURITY DEFINER
    AS $$
begin
  insert into public.profiles (id, full_name, avatar_url)
  values (new.id, new.raw_user_meta_data->>'full_name', new.raw_user_meta_data->>'avatar_url');
  return new;
end;
$$;


ALTER FUNCTION "public"."handle_new_user"() OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."academic_years" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "school" bigint NOT NULL,
    "academic_year" "text" NOT NULL,
    "start_date" "date",
    "end_date" "date"
);


ALTER TABLE "public"."academic_years" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."groups" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text" NOT NULL,
    "academic_year_id" bigint,
    "school_id" bigint NOT NULL,
    "avatar_url" "text",
    "cover_url" "text",
    "vanity_id" "text" NOT NULL,
    "semester" bigint,
    "course" bigint,
    "description" "text",
    "college" bigint,
    "admin_uni_group" boolean DEFAULT false NOT NULL,
    "private" boolean DEFAULT false NOT NULL,
    "deleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "public"."groups" OWNER TO "postgres";


ALTER TABLE "public"."groups" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."blocks_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."classes" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "subject_id" bigint NOT NULL,
    "code" "text",
    "start_time" time without time zone NOT NULL,
    "end_time" time without time zone NOT NULL,
    "room" "text" NOT NULL,
    "student_id" bigint NOT NULL,
    "professor_id" bigint,
    "monday" boolean NOT NULL,
    "tuesday" boolean NOT NULL,
    "wednesday" boolean NOT NULL,
    "thursday" boolean NOT NULL,
    "friday" boolean NOT NULL,
    "saturday" boolean NOT NULL,
    "sunday" boolean NOT NULL
);


ALTER TABLE "public"."classes" OWNER TO "postgres";


ALTER TABLE "public"."classes" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."classes_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."coe_scans" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "student_id" bigint NOT NULL
);


ALTER TABLE "public"."coe_scans" OWNER TO "postgres";


ALTER TABLE "public"."coe_scans" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."coe_scans_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."colleges" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "title" "text" NOT NULL,
    "description" "text"
);


ALTER TABLE "public"."colleges" OWNER TO "postgres";


ALTER TABLE "public"."colleges" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."colleges_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."comments" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "profile_id" "uuid" NOT NULL,
    "comment" "text",
    "image" "text",
    "post_id" bigint
);


ALTER TABLE "public"."comments" OWNER TO "postgres";


ALTER TABLE "public"."comments" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."comments_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."courses" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "title" "text" NOT NULL,
    "description" "text",
    "profile_url" "text",
    "school" bigint,
    "college_id" bigint NOT NULL,
    "full_title" "text"
);


ALTER TABLE "public"."courses" OWNER TO "postgres";


ALTER TABLE "public"."courses" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."courses_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."crowd_sourced_professors" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "full_name" "text" NOT NULL,
    "school" bigint NOT NULL,
    "official_professor_id" bigint
);


ALTER TABLE "public"."crowd_sourced_professors" OWNER TO "postgres";


COMMENT ON TABLE "public"."crowd_sourced_professors" IS 'Professors list by students';



ALTER TABLE "public"."crowd_sourced_professors" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."crowd_sourced_professors_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."group_chat_urls" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "group_id" bigint,
    "title" "text" NOT NULL,
    "description" "text",
    "link" "text" NOT NULL
);


ALTER TABLE "public"."group_chat_urls" OWNER TO "postgres";


ALTER TABLE "public"."group_chat_urls" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."group_chats_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."group_comments" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "post_id" bigint NOT NULL,
    "parent_comment_id" bigint,
    "member_id" bigint NOT NULL,
    "student_id" bigint NOT NULL,
    "content" "text"
);


ALTER TABLE "public"."group_comments" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."group_members" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "student_id" bigint,
    "group_id" bigint NOT NULL,
    "creator" boolean DEFAULT false NOT NULL,
    "promoted_admin_by" bigint,
    "is_admin" boolean DEFAULT false NOT NULL,
    "profile_id" "uuid" NOT NULL,
    "description" "text",
    "approved" boolean DEFAULT true NOT NULL,
    "group_vanity_id" "text",
    "avatar_url" "text"
);


ALTER TABLE "public"."group_members" OWNER TO "postgres";


ALTER TABLE "public"."group_members" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."group_members_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."group_posts" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "content" "text",
    "pinned" boolean DEFAULT false NOT NULL,
    "group_id" bigint NOT NULL,
    "member_id" bigint NOT NULL,
    "student_id" bigint NOT NULL,
    "title" "text",
    "image_url" "text",
    "group_vanity_id" "text"
);


ALTER TABLE "public"."group_posts" OWNER TO "postgres";


ALTER TABLE "public"."group_comments" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."group_posts_comments_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."group_rules" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "group_vanity_id" "text" NOT NULL,
    "title" "text" NOT NULL,
    "description" "text",
    "order" integer NOT NULL
);


ALTER TABLE "public"."group_rules" OWNER TO "postgres";


ALTER TABLE "public"."group_rules" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."group_rules_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."hobbies" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "title" "text" NOT NULL,
    "category_id" bigint,
    "is_custom" boolean DEFAULT false NOT NULL,
    "created_by_student_id" bigint,
    "ionicon_name" "text"
);


ALTER TABLE "public"."hobbies" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."hobbies_category" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "title" "text" NOT NULL
);


ALTER TABLE "public"."hobbies_category" OWNER TO "postgres";


ALTER TABLE "public"."hobbies_category" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."hobbies_category_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE "public"."hobbies" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."hobbies_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."threads" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "deleted" boolean DEFAULT false NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"(),
    "title" "text" DEFAULT ''::"text" NOT NULL
);


ALTER TABLE "public"."threads" OWNER TO "postgres";


ALTER TABLE "public"."threads" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."messages_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."otp_codes" (
    "id" integer NOT NULL,
    "code" "text" NOT NULL,
    "created_at" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "email" "text" NOT NULL
);


ALTER TABLE "public"."otp_codes" OWNER TO "postgres";


CREATE SEQUENCE IF NOT EXISTS "public"."otp_codes_id_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "public"."otp_codes_id_seq" OWNER TO "postgres";


ALTER SEQUENCE "public"."otp_codes_id_seq" OWNED BY "public"."otp_codes"."id";



CREATE TABLE IF NOT EXISTS "public"."posts" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "school_id" bigint,
    "title" "text" NOT NULL,
    "body" "text" NOT NULL,
    "group_id" bigint,
    "parent_post" bigint,
    "is_announcement" boolean DEFAULT false NOT NULL,
    "is_pinned_announcement" boolean DEFAULT false NOT NULL,
    "reaction" "public"."reaction"
);


ALTER TABLE "public"."posts" OWNER TO "postgres";


ALTER TABLE "public"."group_posts" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."posts_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE "public"."posts" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."posts_id_seq1"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."professors" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "full_name" "text" NOT NULL,
    "school" bigint NOT NULL,
    "profile_id" "uuid" NOT NULL,
    "verified" boolean NOT NULL
);


ALTER TABLE "public"."professors" OWNER TO "postgres";


ALTER TABLE "public"."professors" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."professors_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."profiles" (
    "id" "uuid" NOT NULL,
    "updated_at" timestamp with time zone,
    "full_name" "text",
    "avatar_url" "text",
    CONSTRAINT "full_name_length" CHECK (("char_length"("full_name") >= 2))
);


ALTER TABLE "public"."profiles" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."resources_collection" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "group_id" bigint,
    "group_member_id" bigint,
    "student_id" bigint,
    "title" "text"
);


ALTER TABLE "public"."resources_collection" OWNER TO "postgres";


ALTER TABLE "public"."resources_collection" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."resources_collection_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."rooms" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text" NOT NULL,
    "building" "text",
    "floor" "text"
);


ALTER TABLE "public"."rooms" OWNER TO "postgres";


ALTER TABLE "public"."rooms" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."rooms_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."schedules" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "group_id" bigint NOT NULL,
    "subject_id" bigint NOT NULL,
    "professor_id" bigint,
    "room_id" bigint
);


ALTER TABLE "public"."schedules" OWNER TO "postgres";


ALTER TABLE "public"."schedules" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."schedules_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE "public"."academic_years" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."school_year_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."schools" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "email" "text" NOT NULL,
    "name" "text" NOT NULL,
    "profile_url" "text",
    "vanity_url" "text" NOT NULL,
    "nickname" "text",
    "domain" "text"
);


ALTER TABLE "public"."schools" OWNER TO "postgres";


ALTER TABLE "public"."schools" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."schools_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."search_history" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "student_id" bigint NOT NULL,
    "query" "text" NOT NULL,
    "profile_id" "uuid" NOT NULL,
    "hide" boolean DEFAULT false NOT NULL
);

ALTER TABLE ONLY "public"."search_history" REPLICA IDENTITY FULL;


ALTER TABLE "public"."search_history" OWNER TO "postgres";


ALTER TABLE "public"."search_history" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."search_history_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."security_questions" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "group_id" bigint,
    "title" "text" NOT NULL,
    "answer" "text" NOT NULL,
    "hint" "text"
);


ALTER TABLE "public"."security_questions" OWNER TO "postgres";


ALTER TABLE "public"."security_questions" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."security_questions_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."semesters" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "start_date" "date" NOT NULL,
    "end_date" "date" NOT NULL,
    "name" "text" NOT NULL,
    "academic_year" bigint NOT NULL,
    "term" bigint NOT NULL
);


ALTER TABLE "public"."semesters" OWNER TO "postgres";


ALTER TABLE "public"."semesters" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."semesters_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."student_followers" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "follower_id" bigint NOT NULL,
    "following_id" bigint NOT NULL
);


ALTER TABLE "public"."student_followers" OWNER TO "postgres";


ALTER TABLE "public"."student_followers" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."student_followers_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."student_hobbies" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "hobby_id" bigint NOT NULL,
    "student_id" bigint NOT NULL
);


ALTER TABLE "public"."student_hobbies" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."students" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "school" bigint NOT NULL,
    "student_no" "text",
    "profile_id" "uuid" NOT NULL,
    "school_email" "text" NOT NULL,
    "avatar_url" "text",
    "verified" boolean DEFAULT false NOT NULL,
    "academic_year_id" bigint,
    "description" "text",
    "full_name" "text",
    "type" "public"."student_type" DEFAULT 'regular'::"public"."student_type",
    "course" bigint,
    "year_level" integer,
    "vanity_url" "text",
    "block" "text"
);


ALTER TABLE "public"."students" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."students_class" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "student_id" bigint NOT NULL,
    "class_id" bigint NOT NULL
);


ALTER TABLE "public"."students_class" OWNER TO "postgres";


ALTER TABLE "public"."students_class" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."students_class_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE "public"."students" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."students_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."subjects" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "school_id" bigint NOT NULL,
    "title" "text" NOT NULL,
    "units" bigint NOT NULL,
    "description" "text"
);


ALTER TABLE "public"."subjects" OWNER TO "postgres";


ALTER TABLE "public"."subjects" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."subjects_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."threads_messages" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "thread_id" bigint NOT NULL,
    "student_id" bigint NOT NULL,
    "text" "text" DEFAULT ''::"text" NOT NULL,
    "full_name" "text"
);


ALTER TABLE "public"."threads_messages" OWNER TO "postgres";


ALTER TABLE "public"."threads_messages" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."threads_messages_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE "public"."student_hobbies" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."user_hobbies_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE ONLY "public"."otp_codes" ALTER COLUMN "id" SET DEFAULT "nextval"('"public"."otp_codes_id_seq"'::"regclass");



ALTER TABLE ONLY "public"."groups"
    ADD CONSTRAINT "blocks_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."classes"
    ADD CONSTRAINT "classes_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."coe_scans"
    ADD CONSTRAINT "coe_scans_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."colleges"
    ADD CONSTRAINT "colleges_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."comments"
    ADD CONSTRAINT "comments_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."courses"
    ADD CONSTRAINT "courses_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."crowd_sourced_professors"
    ADD CONSTRAINT "crowd_sourced_professors_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."group_chat_urls"
    ADD CONSTRAINT "group_chats_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."group_members"
    ADD CONSTRAINT "group_members_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."group_comments"
    ADD CONSTRAINT "group_posts_comments_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."group_rules"
    ADD CONSTRAINT "group_rules_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."groups"
    ADD CONSTRAINT "groups_name_key" UNIQUE ("name");



ALTER TABLE ONLY "public"."groups"
    ADD CONSTRAINT "groups_slug_key" UNIQUE ("vanity_id");



ALTER TABLE ONLY "public"."hobbies_category"
    ADD CONSTRAINT "hobbies_category_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."hobbies"
    ADD CONSTRAINT "hobbies_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."threads"
    ADD CONSTRAINT "messages_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."otp_codes"
    ADD CONSTRAINT "otp_codes_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."group_posts"
    ADD CONSTRAINT "posts_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."posts"
    ADD CONSTRAINT "posts_pkey1" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."professors"
    ADD CONSTRAINT "professors_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."profiles"
    ADD CONSTRAINT "profiles_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."resources_collection"
    ADD CONSTRAINT "resources_collection_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."rooms"
    ADD CONSTRAINT "rooms_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."schedules"
    ADD CONSTRAINT "schedules_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."academic_years"
    ADD CONSTRAINT "school_year_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."schools"
    ADD CONSTRAINT "schools_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."schools"
    ADD CONSTRAINT "schools_vanity_url_key" UNIQUE ("vanity_url");



ALTER TABLE ONLY "public"."search_history"
    ADD CONSTRAINT "search_history_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."security_questions"
    ADD CONSTRAINT "security_questions_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."semesters"
    ADD CONSTRAINT "semesters_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."student_followers"
    ADD CONSTRAINT "student_followers_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."students_class"
    ADD CONSTRAINT "students_class_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."students"
    ADD CONSTRAINT "students_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."students"
    ADD CONSTRAINT "students_vanity_url_key" UNIQUE ("vanity_url");



ALTER TABLE ONLY "public"."subjects"
    ADD CONSTRAINT "subjects_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."threads_messages"
    ADD CONSTRAINT "threads_messages_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."student_followers"
    ADD CONSTRAINT "unique_follower_following" UNIQUE ("follower_id", "following_id");



ALTER TABLE ONLY "public"."student_hobbies"
    ADD CONSTRAINT "user_hobbies_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."academic_years"
    ADD CONSTRAINT "academic_years_school_fkey" FOREIGN KEY ("school") REFERENCES "public"."schools"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."classes"
    ADD CONSTRAINT "classes_professor_id_fkey" FOREIGN KEY ("professor_id") REFERENCES "public"."students"("id");



ALTER TABLE ONLY "public"."classes"
    ADD CONSTRAINT "classes_student_id_fkey" FOREIGN KEY ("student_id") REFERENCES "public"."students"("id");



ALTER TABLE ONLY "public"."classes"
    ADD CONSTRAINT "classes_subject_id_fkey" FOREIGN KEY ("subject_id") REFERENCES "public"."subjects"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."coe_scans"
    ADD CONSTRAINT "coe_scans_student_id_fkey" FOREIGN KEY ("student_id") REFERENCES "public"."students"("id");



ALTER TABLE ONLY "public"."comments"
    ADD CONSTRAINT "comments_profile_id_fkey" FOREIGN KEY ("profile_id") REFERENCES "public"."profiles"("id");



ALTER TABLE ONLY "public"."courses"
    ADD CONSTRAINT "courses_college_id_fkey" FOREIGN KEY ("college_id") REFERENCES "public"."colleges"("id");



ALTER TABLE ONLY "public"."courses"
    ADD CONSTRAINT "courses_school_fkey" FOREIGN KEY ("school") REFERENCES "public"."schools"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."crowd_sourced_professors"
    ADD CONSTRAINT "crowd_sourced_professors_official_professor_id_fkey" FOREIGN KEY ("official_professor_id") REFERENCES "public"."professors"("id");



ALTER TABLE ONLY "public"."group_chat_urls"
    ADD CONSTRAINT "group_chat_urls_group_id_fkey" FOREIGN KEY ("group_id") REFERENCES "public"."groups"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."group_comments"
    ADD CONSTRAINT "group_comments_member_id_fkey" FOREIGN KEY ("member_id") REFERENCES "public"."group_members"("id");



ALTER TABLE ONLY "public"."group_comments"
    ADD CONSTRAINT "group_comments_parent_comment_id_fkey" FOREIGN KEY ("parent_comment_id") REFERENCES "public"."group_posts"("id");



ALTER TABLE ONLY "public"."group_comments"
    ADD CONSTRAINT "group_comments_post_id_fkey" FOREIGN KEY ("post_id") REFERENCES "public"."group_posts"("id");



ALTER TABLE ONLY "public"."group_comments"
    ADD CONSTRAINT "group_comments_student_id_fkey" FOREIGN KEY ("student_id") REFERENCES "public"."students"("id");



ALTER TABLE ONLY "public"."group_members"
    ADD CONSTRAINT "group_members_group_id_fkey" FOREIGN KEY ("group_id") REFERENCES "public"."groups"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."group_members"
    ADD CONSTRAINT "group_members_group_vanity_id_fkey" FOREIGN KEY ("group_vanity_id") REFERENCES "public"."groups"("vanity_id");



ALTER TABLE ONLY "public"."group_members"
    ADD CONSTRAINT "group_members_profile_id_fkey" FOREIGN KEY ("profile_id") REFERENCES "public"."profiles"("id");



ALTER TABLE ONLY "public"."group_members"
    ADD CONSTRAINT "group_members_promoted_admin_by_fkey" FOREIGN KEY ("promoted_admin_by") REFERENCES "public"."group_members"("id");



ALTER TABLE ONLY "public"."group_members"
    ADD CONSTRAINT "group_members_student_id_fkey" FOREIGN KEY ("student_id") REFERENCES "public"."students"("id");



ALTER TABLE ONLY "public"."group_posts"
    ADD CONSTRAINT "group_posts_group_id_fkey" FOREIGN KEY ("group_id") REFERENCES "public"."groups"("id");



ALTER TABLE ONLY "public"."group_posts"
    ADD CONSTRAINT "group_posts_group_vanity_id_fkey" FOREIGN KEY ("group_vanity_id") REFERENCES "public"."groups"("vanity_id");



ALTER TABLE ONLY "public"."group_posts"
    ADD CONSTRAINT "group_posts_member_id_fkey" FOREIGN KEY ("member_id") REFERENCES "public"."group_members"("id");



ALTER TABLE ONLY "public"."group_posts"
    ADD CONSTRAINT "group_posts_student_id_fkey" FOREIGN KEY ("student_id") REFERENCES "public"."students"("id");



ALTER TABLE ONLY "public"."group_rules"
    ADD CONSTRAINT "group_rules_group_vanity_id_fkey" FOREIGN KEY ("group_vanity_id") REFERENCES "public"."groups"("vanity_id");



ALTER TABLE ONLY "public"."groups"
    ADD CONSTRAINT "groups_academic_year_id_fkey" FOREIGN KEY ("academic_year_id") REFERENCES "public"."academic_years"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."groups"
    ADD CONSTRAINT "groups_college_fkey" FOREIGN KEY ("college") REFERENCES "public"."colleges"("id");



ALTER TABLE ONLY "public"."groups"
    ADD CONSTRAINT "groups_course_fkey" FOREIGN KEY ("course") REFERENCES "public"."courses"("id");



ALTER TABLE ONLY "public"."groups"
    ADD CONSTRAINT "groups_school_id_fkey" FOREIGN KEY ("school_id") REFERENCES "public"."schools"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."groups"
    ADD CONSTRAINT "groups_semester_fkey" FOREIGN KEY ("semester") REFERENCES "public"."semesters"("id");



ALTER TABLE ONLY "public"."hobbies"
    ADD CONSTRAINT "hobbies_category_id_fkey" FOREIGN KEY ("category_id") REFERENCES "public"."hobbies_category"("id");



ALTER TABLE ONLY "public"."hobbies"
    ADD CONSTRAINT "hobbies_created_by_student_id_fkey" FOREIGN KEY ("created_by_student_id") REFERENCES "public"."students"("id");



ALTER TABLE ONLY "public"."posts"
    ADD CONSTRAINT "posts_group_id_fkey" FOREIGN KEY ("group_id") REFERENCES "public"."groups"("id");



ALTER TABLE ONLY "public"."posts"
    ADD CONSTRAINT "posts_parent_post_fkey" FOREIGN KEY ("parent_post") REFERENCES "public"."posts"("id");



ALTER TABLE ONLY "public"."posts"
    ADD CONSTRAINT "posts_school_id_fkey" FOREIGN KEY ("school_id") REFERENCES "public"."schools"("id");



ALTER TABLE ONLY "public"."professors"
    ADD CONSTRAINT "professors_profile_id_fkey" FOREIGN KEY ("profile_id") REFERENCES "public"."profiles"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."professors"
    ADD CONSTRAINT "professors_school_fkey" FOREIGN KEY ("school") REFERENCES "public"."schools"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."profiles"
    ADD CONSTRAINT "profiles_id_fkey" FOREIGN KEY ("id") REFERENCES "auth"."users"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."resources_collection"
    ADD CONSTRAINT "resources_collection_group_id_fkey" FOREIGN KEY ("group_id") REFERENCES "public"."groups"("id");



ALTER TABLE ONLY "public"."resources_collection"
    ADD CONSTRAINT "resources_collection_group_member_id_fkey" FOREIGN KEY ("group_member_id") REFERENCES "public"."group_members"("id");



ALTER TABLE ONLY "public"."resources_collection"
    ADD CONSTRAINT "resources_collection_student_id_fkey" FOREIGN KEY ("student_id") REFERENCES "public"."students"("id");



ALTER TABLE ONLY "public"."schedules"
    ADD CONSTRAINT "schedules_group_id_fkey" FOREIGN KEY ("group_id") REFERENCES "public"."groups"("id");



ALTER TABLE ONLY "public"."schedules"
    ADD CONSTRAINT "schedules_professor_id_fkey" FOREIGN KEY ("professor_id") REFERENCES "public"."professors"("id");



ALTER TABLE ONLY "public"."schedules"
    ADD CONSTRAINT "schedules_room_id_fkey" FOREIGN KEY ("room_id") REFERENCES "public"."rooms"("id");



ALTER TABLE ONLY "public"."schedules"
    ADD CONSTRAINT "schedules_subject_id_fkey" FOREIGN KEY ("subject_id") REFERENCES "public"."subjects"("id");



ALTER TABLE ONLY "public"."search_history"
    ADD CONSTRAINT "search_history_profile_id_fkey" FOREIGN KEY ("profile_id") REFERENCES "public"."profiles"("id");



ALTER TABLE ONLY "public"."search_history"
    ADD CONSTRAINT "search_history_student_id_fkey" FOREIGN KEY ("student_id") REFERENCES "public"."students"("id");



ALTER TABLE ONLY "public"."security_questions"
    ADD CONSTRAINT "security_questions_group_id_fkey" FOREIGN KEY ("group_id") REFERENCES "public"."groups"("id");



ALTER TABLE ONLY "public"."semesters"
    ADD CONSTRAINT "semesters_academic_year_fkey" FOREIGN KEY ("academic_year") REFERENCES "public"."academic_years"("id");



ALTER TABLE ONLY "public"."student_followers"
    ADD CONSTRAINT "student_followers_follower_id_fkey" FOREIGN KEY ("follower_id") REFERENCES "public"."students"("id");



ALTER TABLE ONLY "public"."student_followers"
    ADD CONSTRAINT "student_followers_following_id_fkey" FOREIGN KEY ("following_id") REFERENCES "public"."students"("id");



ALTER TABLE ONLY "public"."students"
    ADD CONSTRAINT "students_academic_year_id_fkey" FOREIGN KEY ("academic_year_id") REFERENCES "public"."academic_years"("id");



ALTER TABLE ONLY "public"."students_class"
    ADD CONSTRAINT "students_class_class_id_fkey" FOREIGN KEY ("class_id") REFERENCES "public"."classes"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."students_class"
    ADD CONSTRAINT "students_class_student_id_fkey" FOREIGN KEY ("student_id") REFERENCES "public"."students"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."students"
    ADD CONSTRAINT "students_course_fkey" FOREIGN KEY ("course") REFERENCES "public"."courses"("id") ON UPDATE CASCADE;



ALTER TABLE ONLY "public"."students"
    ADD CONSTRAINT "students_profile_id_fkey" FOREIGN KEY ("profile_id") REFERENCES "public"."profiles"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."students"
    ADD CONSTRAINT "students_school_fkey" FOREIGN KEY ("school") REFERENCES "public"."schools"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."subjects"
    ADD CONSTRAINT "subjects_school_id_fkey" FOREIGN KEY ("school_id") REFERENCES "public"."schools"("id");



ALTER TABLE ONLY "public"."threads_messages"
    ADD CONSTRAINT "threads_messages_student_id_fkey" FOREIGN KEY ("student_id") REFERENCES "public"."students"("id");



ALTER TABLE ONLY "public"."threads_messages"
    ADD CONSTRAINT "threads_messages_thread_id_fkey" FOREIGN KEY ("thread_id") REFERENCES "public"."threads"("id");



ALTER TABLE ONLY "public"."student_hobbies"
    ADD CONSTRAINT "user_hobbies_hobby_id_fkey" FOREIGN KEY ("hobby_id") REFERENCES "public"."hobbies"("id");



ALTER TABLE ONLY "public"."student_hobbies"
    ADD CONSTRAINT "user_hobbies_student_id_fkey" FOREIGN KEY ("student_id") REFERENCES "public"."students"("id");



CREATE POLICY "Admins can delete group rules" ON "public"."group_rules" FOR DELETE TO "authenticated" USING ((EXISTS ( SELECT 1
   FROM ("public"."group_members" "gm"
     JOIN "public"."groups" "g" ON (("gm"."group_id" = "g"."id")))
  WHERE (("gm"."profile_id" = "auth"."uid"()) AND ("gm"."is_admin" = true) AND ("g"."vanity_id" = "gm"."group_vanity_id")))));



CREATE POLICY "Admins can insert group rules" ON "public"."group_rules" FOR INSERT TO "authenticated" WITH CHECK ((EXISTS ( SELECT 1
   FROM ("public"."group_members" "gm"
     JOIN "public"."groups" "g" ON (("gm"."group_id" = "g"."id")))
  WHERE (("gm"."profile_id" = "auth"."uid"()) AND ("gm"."is_admin" = true) AND ("g"."vanity_id" = "gm"."group_vanity_id")))));



CREATE POLICY "Admins can update group rules" ON "public"."group_rules" FOR UPDATE TO "authenticated" WITH CHECK ((EXISTS ( SELECT 1
   FROM ("public"."group_members" "gm"
     JOIN "public"."groups" "g" ON (("gm"."group_id" = "g"."id")))
  WHERE (("gm"."profile_id" = "auth"."uid"()) AND ("gm"."is_admin" = true) AND ("g"."vanity_id" = "gm"."group_vanity_id")))));



CREATE POLICY "Admins can view group rules" ON "public"."group_rules" FOR SELECT TO "authenticated" USING ((EXISTS ( SELECT 1
   FROM ("public"."group_members" "gm"
     JOIN "public"."groups" "g" ON (("gm"."group_id" = "g"."id")))
  WHERE (("gm"."profile_id" = "auth"."uid"()) AND ("gm"."is_admin" = true) AND ("g"."vanity_id" = "gm"."group_vanity_id")))));



CREATE POLICY "Authenticated users can view group rules" ON "public"."group_rules" FOR SELECT TO "authenticated" USING ((EXISTS ( SELECT 1
   FROM ("public"."group_members" "gm"
     JOIN "public"."groups" "g" ON (("gm"."group_id" = "g"."id")))
  WHERE (("gm"."profile_id" = "auth"."uid"()) AND ("g"."vanity_id" = "gm"."group_vanity_id")))));



CREATE POLICY "Group rules are visible to everyone." ON "public"."group_rules" FOR SELECT TO "anon" USING (true);



CREATE POLICY "No anonymous deletes" ON "public"."group_rules" FOR DELETE TO "anon" USING (false);



CREATE POLICY "No anonymous inserts" ON "public"."group_rules" FOR INSERT TO "anon" WITH CHECK (false);



CREATE POLICY "No anonymous updates" ON "public"."group_rules" FOR UPDATE TO "anon" USING (false);



CREATE POLICY "Public profiles are viewable by everyone." ON "public"."profiles" FOR SELECT USING (true);



CREATE POLICY "Users can insert their own profile." ON "public"."profiles" FOR INSERT WITH CHECK (("auth"."uid"() = "id"));



CREATE POLICY "Users can update own profile." ON "public"."profiles" FOR UPDATE USING (("auth"."uid"() = "id"));



ALTER TABLE "public"."group_rules" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."posts" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."profiles" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."schedules" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."search_history";



ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."threads_messages";



REVOKE USAGE ON SCHEMA "public" FROM PUBLIC;
GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";




















































































































































































GRANT ALL ON FUNCTION "public"."get_group_metadata"() TO "anon";
GRANT ALL ON FUNCTION "public"."get_group_metadata"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."get_group_metadata"() TO "service_role";



GRANT ALL ON FUNCTION "public"."get_student_profile"("user_id" integer) TO "anon";
GRANT ALL ON FUNCTION "public"."get_student_profile"("user_id" integer) TO "authenticated";
GRANT ALL ON FUNCTION "public"."get_student_profile"("user_id" integer) TO "service_role";



GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "anon";
GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "service_role";


















GRANT ALL ON TABLE "public"."academic_years" TO "anon";
GRANT ALL ON TABLE "public"."academic_years" TO "authenticated";
GRANT ALL ON TABLE "public"."academic_years" TO "service_role";



GRANT ALL ON TABLE "public"."groups" TO "anon";
GRANT ALL ON TABLE "public"."groups" TO "authenticated";
GRANT ALL ON TABLE "public"."groups" TO "service_role";



GRANT ALL ON SEQUENCE "public"."blocks_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."blocks_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."blocks_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."classes" TO "anon";
GRANT ALL ON TABLE "public"."classes" TO "authenticated";
GRANT ALL ON TABLE "public"."classes" TO "service_role";



GRANT ALL ON SEQUENCE "public"."classes_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."classes_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."classes_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."coe_scans" TO "anon";
GRANT ALL ON TABLE "public"."coe_scans" TO "authenticated";
GRANT ALL ON TABLE "public"."coe_scans" TO "service_role";



GRANT ALL ON SEQUENCE "public"."coe_scans_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."coe_scans_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."coe_scans_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."colleges" TO "anon";
GRANT ALL ON TABLE "public"."colleges" TO "authenticated";
GRANT ALL ON TABLE "public"."colleges" TO "service_role";



GRANT ALL ON SEQUENCE "public"."colleges_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."colleges_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."colleges_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."comments" TO "anon";
GRANT ALL ON TABLE "public"."comments" TO "authenticated";
GRANT ALL ON TABLE "public"."comments" TO "service_role";



GRANT ALL ON SEQUENCE "public"."comments_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."comments_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."comments_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."courses" TO "anon";
GRANT ALL ON TABLE "public"."courses" TO "authenticated";
GRANT ALL ON TABLE "public"."courses" TO "service_role";



GRANT ALL ON SEQUENCE "public"."courses_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."courses_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."courses_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."crowd_sourced_professors" TO "anon";
GRANT ALL ON TABLE "public"."crowd_sourced_professors" TO "authenticated";
GRANT ALL ON TABLE "public"."crowd_sourced_professors" TO "service_role";



GRANT ALL ON SEQUENCE "public"."crowd_sourced_professors_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."crowd_sourced_professors_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."crowd_sourced_professors_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."group_chat_urls" TO "anon";
GRANT ALL ON TABLE "public"."group_chat_urls" TO "authenticated";
GRANT ALL ON TABLE "public"."group_chat_urls" TO "service_role";



GRANT ALL ON SEQUENCE "public"."group_chats_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."group_chats_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."group_chats_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."group_comments" TO "anon";
GRANT ALL ON TABLE "public"."group_comments" TO "authenticated";
GRANT ALL ON TABLE "public"."group_comments" TO "service_role";



GRANT ALL ON TABLE "public"."group_members" TO "anon";
GRANT ALL ON TABLE "public"."group_members" TO "authenticated";
GRANT ALL ON TABLE "public"."group_members" TO "service_role";



GRANT ALL ON SEQUENCE "public"."group_members_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."group_members_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."group_members_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."group_posts" TO "anon";
GRANT ALL ON TABLE "public"."group_posts" TO "authenticated";
GRANT ALL ON TABLE "public"."group_posts" TO "service_role";



GRANT ALL ON SEQUENCE "public"."group_posts_comments_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."group_posts_comments_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."group_posts_comments_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."group_rules" TO "anon";
GRANT ALL ON TABLE "public"."group_rules" TO "authenticated";
GRANT ALL ON TABLE "public"."group_rules" TO "service_role";



GRANT ALL ON SEQUENCE "public"."group_rules_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."group_rules_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."group_rules_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."hobbies" TO "anon";
GRANT ALL ON TABLE "public"."hobbies" TO "authenticated";
GRANT ALL ON TABLE "public"."hobbies" TO "service_role";



GRANT ALL ON TABLE "public"."hobbies_category" TO "anon";
GRANT ALL ON TABLE "public"."hobbies_category" TO "authenticated";
GRANT ALL ON TABLE "public"."hobbies_category" TO "service_role";



GRANT ALL ON SEQUENCE "public"."hobbies_category_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."hobbies_category_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."hobbies_category_id_seq" TO "service_role";



GRANT ALL ON SEQUENCE "public"."hobbies_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."hobbies_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."hobbies_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."threads" TO "anon";
GRANT ALL ON TABLE "public"."threads" TO "authenticated";
GRANT ALL ON TABLE "public"."threads" TO "service_role";



GRANT ALL ON SEQUENCE "public"."messages_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."messages_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."messages_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."otp_codes" TO "anon";
GRANT ALL ON TABLE "public"."otp_codes" TO "authenticated";
GRANT ALL ON TABLE "public"."otp_codes" TO "service_role";



GRANT ALL ON SEQUENCE "public"."otp_codes_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."otp_codes_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."otp_codes_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."posts" TO "anon";
GRANT ALL ON TABLE "public"."posts" TO "authenticated";
GRANT ALL ON TABLE "public"."posts" TO "service_role";



GRANT ALL ON SEQUENCE "public"."posts_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."posts_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."posts_id_seq" TO "service_role";



GRANT ALL ON SEQUENCE "public"."posts_id_seq1" TO "anon";
GRANT ALL ON SEQUENCE "public"."posts_id_seq1" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."posts_id_seq1" TO "service_role";



GRANT ALL ON TABLE "public"."professors" TO "anon";
GRANT ALL ON TABLE "public"."professors" TO "authenticated";
GRANT ALL ON TABLE "public"."professors" TO "service_role";



GRANT ALL ON SEQUENCE "public"."professors_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."professors_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."professors_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."profiles" TO "anon";
GRANT ALL ON TABLE "public"."profiles" TO "authenticated";
GRANT ALL ON TABLE "public"."profiles" TO "service_role";



GRANT ALL ON TABLE "public"."resources_collection" TO "anon";
GRANT ALL ON TABLE "public"."resources_collection" TO "authenticated";
GRANT ALL ON TABLE "public"."resources_collection" TO "service_role";



GRANT ALL ON SEQUENCE "public"."resources_collection_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."resources_collection_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."resources_collection_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."rooms" TO "anon";
GRANT ALL ON TABLE "public"."rooms" TO "authenticated";
GRANT ALL ON TABLE "public"."rooms" TO "service_role";



GRANT ALL ON SEQUENCE "public"."rooms_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."rooms_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."rooms_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."schedules" TO "anon";
GRANT ALL ON TABLE "public"."schedules" TO "authenticated";
GRANT ALL ON TABLE "public"."schedules" TO "service_role";



GRANT ALL ON SEQUENCE "public"."schedules_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."schedules_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."schedules_id_seq" TO "service_role";



GRANT ALL ON SEQUENCE "public"."school_year_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."school_year_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."school_year_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."schools" TO "anon";
GRANT ALL ON TABLE "public"."schools" TO "authenticated";
GRANT ALL ON TABLE "public"."schools" TO "service_role";



GRANT ALL ON SEQUENCE "public"."schools_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."schools_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."schools_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."search_history" TO "anon";
GRANT ALL ON TABLE "public"."search_history" TO "authenticated";
GRANT ALL ON TABLE "public"."search_history" TO "service_role";



GRANT ALL ON SEQUENCE "public"."search_history_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."search_history_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."search_history_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."security_questions" TO "anon";
GRANT ALL ON TABLE "public"."security_questions" TO "authenticated";
GRANT ALL ON TABLE "public"."security_questions" TO "service_role";



GRANT ALL ON SEQUENCE "public"."security_questions_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."security_questions_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."security_questions_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."semesters" TO "anon";
GRANT ALL ON TABLE "public"."semesters" TO "authenticated";
GRANT ALL ON TABLE "public"."semesters" TO "service_role";



GRANT ALL ON SEQUENCE "public"."semesters_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."semesters_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."semesters_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."student_followers" TO "anon";
GRANT ALL ON TABLE "public"."student_followers" TO "authenticated";
GRANT ALL ON TABLE "public"."student_followers" TO "service_role";



GRANT ALL ON SEQUENCE "public"."student_followers_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."student_followers_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."student_followers_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."student_hobbies" TO "anon";
GRANT ALL ON TABLE "public"."student_hobbies" TO "authenticated";
GRANT ALL ON TABLE "public"."student_hobbies" TO "service_role";



GRANT ALL ON TABLE "public"."students" TO "anon";
GRANT ALL ON TABLE "public"."students" TO "authenticated";
GRANT ALL ON TABLE "public"."students" TO "service_role";



GRANT ALL ON TABLE "public"."students_class" TO "anon";
GRANT ALL ON TABLE "public"."students_class" TO "authenticated";
GRANT ALL ON TABLE "public"."students_class" TO "service_role";



GRANT ALL ON SEQUENCE "public"."students_class_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."students_class_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."students_class_id_seq" TO "service_role";



GRANT ALL ON SEQUENCE "public"."students_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."students_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."students_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."subjects" TO "anon";
GRANT ALL ON TABLE "public"."subjects" TO "authenticated";
GRANT ALL ON TABLE "public"."subjects" TO "service_role";



GRANT ALL ON SEQUENCE "public"."subjects_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."subjects_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."subjects_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."threads_messages" TO "anon";
GRANT ALL ON TABLE "public"."threads_messages" TO "authenticated";
GRANT ALL ON TABLE "public"."threads_messages" TO "service_role";



GRANT ALL ON SEQUENCE "public"."threads_messages_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."threads_messages_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."threads_messages_id_seq" TO "service_role";



GRANT ALL ON SEQUENCE "public"."user_hobbies_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."user_hobbies_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."user_hobbies_id_seq" TO "service_role";



ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
